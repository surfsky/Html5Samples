/*
传统位置布局 CSS 预设类
https://www.github.com/surfsky/
2024-09
*/
/*@import url("./rem.css");*/

/*************************************************
预设
*************************************************/
html,body      {height: 100%; width: 100%; margin: 0; padding:0;}



/*************************************************
当前元素的位置 Anchor 控制（position 属性）
*************************************************/
.fill          {position:fixed; top:0px; bottom:0px; left:0px;  right:0px;}

/* 固定位置（拖动页面时不会移动） */
.fixTopLeft    {position:fixed; top:0px;    left:0px; }
.fixTop        {position:fixed; top:0px;    left:50%; transform: translateX(-50%);}
.fixTopRight   {position:fixed; top:0px;    right:0px; }
.fixBottomLeft {position:fixed; bottom:0px; left:0px; }
.fixBottom     {position:fixed; bottom:0px; left:50%; transform: translateX(-50%); }
.fixBottomRight{position:fixed; bottom:0px; right:0px; }
.fixLeft       {position:fixed; top:50%;    transform: translateY(-50%); left:0px; }
.fixCenter     {position:fixed; top:50%;    transform: translate3D(-50%, -50%, 0); left:50%;}
.fixRight      {position:fixed; top:50%;    transform: translateY(-50%); right:0px; }


/* 位置（拖动页面时随着移动） */
.topLeft       {position:absolute; top:0px;    left:0px; }
.top           {position:absolute; top:0px;    left:50%; transform: translateX(-50%);}
.topRight      {position:absolute; top:0px;    right:0px; }
.bottomLeft    {position:absolute; bottom:0px; left:0px; }
.bottom        {position:absolute; bottom:0px; left:50%; transform: translateX(-50%); }
.bottomRight   {position:absolute; bottom:0px; right:0px; }
.left          {position:absolute; top:50%;    transform: translateY(-50%); left:0px; }
.center        {position:absolute; top:50%;    transform: translate3D(-50%, -50%, 0); left:50%;}
.right         {position:absolute; top:50%;    transform: translateY(-50%); right:0px; }


/* 浮动位置（拖动页面时会移动） */
.floatTop        {position:relative; top:0px;    left:50%; transform: translateX(-50%);}
.floatTopLeft    {position:relative; top:0px;    left:0px; }
.floatTopRight   {position:relative; top:0px;    right:0px; }
.floatBottomLeft {position:relative; bottom:0px; left:0px; }
.floatBottomRight{position:relative; bottom:0px; right:0px; }
.floatBottom     {position:relative; bottom:0px; left:50%; transform: translateX(-50%); }
.floatLeft       {position:relative; top:50%;    transform: translateY(-50%); left:0px; }
.floatCenter     {position:relative; top:50%;    transform: translate3D(-50%, -50%, 0); left:50%;}
.floatRight      {position:relative; top:50%;    transform: translateY(-50%); right:0px; }



/*************************************************
元素外观控制
*************************************************/
/* 圆角 */
.r1            {border-radius: 0.1rem;}
.r2            {border-radius: 0.2rem;}
.r3            {border-radius: 0.3rem;}
.r4            {border-radius: 0.4rem;}
.r5            {border-radius: 0.5rem;}
.rs            {border-radius: 0.1rem;}
.rm            {border-radius: 0.3rem;}
.rl            {border-radius: 0.5rem;}



/*************************************************
元素间距控制（margin & padding）
box模型：content + padding + border + margin
box-sizing: 
    content-box 标准盒：width 和 height 指的是 content
    border-box  IE盒：width 和 height 指的是 content + padding + border
    常用内容盒，边框盒更容易精准控制布局（不受padding和border影响）
*************************************************/
/* margin 外间距 */
.m1          {margin:0.1rem;}
.m2          {margin:0.2rem;}
.m3          {margin:0.3rem;}
.m4          {margin:0.4rem;}
.m5          {margin:0.5rem;}
.mx1         {margin-left:0.1rem; margin-right:0.1rem;}
.mx2         {margin-left:0.2rem; margin-right:0.2rem;}
.mx3         {margin-left:0.3rem; margin-right:0.3rem;}
.mx4         {margin-left:0.4rem; margin-right:0.4rem;}
.mx5         {margin-left:0.5rem; margin-right:0.5rem;}
.my1         {margin-top:0.1rem;  margin-bottom:0.1rem;}
.my2         {margin-top:0.2rem;  margin-bottom:0.2rem;}
.my3         {margin-top:0.3rem;  margin-bottom:0.3rem;}
.my4         {margin-top:0.4rem;  margin-bottom:0.4rem;}
.my5         {margin-top:0.5rem;  margin-bottom:0.5rem;}
.mAuto       {margin:auto;}
.mxAuto      {margin-left:auto; margin-right:auto;}
.myAuto      {margin-top:auto;  margin-bottom:auto;}
.ms          {margin:0.1rem;}
.mm          {margin:0.3rem;}
.ml          {margin:0.5rem;}
.mxl         {margin:0.7rem;}
.mxxl        {margin:1.0rem;}

/* 
padding 内间距
*/
.p1          {padding:0.1rem;}
.p2          {padding:0.2rem;}
.p3          {padding:0.3rem;}
.p4          {padding:0.4rem;}
.p5          {padding:0.5rem;}
.px1         {padding-left:0.1rem; padding-right:0.1rem;}
.px2         {padding-left:0.2rem; padding-right:0.2rem;}
.px3         {padding-left:0.3rem; padding-right:0.3rem;}
.px3         {padding-left:0.4rem; padding-right:0.4rem;}
.px5         {padding-left:0.5rem; padding-right:0.5rem;}
.py1         {padding-top:0.1rem;  padding-bottom:0.1rem;}
.py2         {padding-top:0.2rem;  padding-bottom:0.2rem;}
.py3         {padding-top:0.3rem;  padding-bottom:0.3rem;}
.py3         {padding-top:0.4rem;  padding-bottom:0.4rem;}
.py5         {padding-top:0.5rem;  padding-bottom:0.5rem;}
.pAuto       {padding:auto;}
.pxAuto      {padding-left:auto; padding-right:auto;}
.pyAuto      {padding-top:auto;  padding-bottom:auto;}
.ps          {padding:0.1rem;}
.pm          {padding:0.3rem;}
.pl          {padding:0.5rem;}
.pxl         {padding:0.7rem;}
.pxxl        {padding:1.0rem;}


/* 
chlid margin
*/
.cm1 > *         {margin:0.1rem;}
.cm2 > *         {margin:0.2rem;}
.cm3 > *         {margin:0.3rem;}
.cm4 > *         {margin:0.4rem;}
.cm5 > *         {margin:0.5rem;}
.cmr1 > *        {margin-right:0.1rem;}
.cmr2 > *        {margin-right:0.2rem;}
.cmr3 > *        {margin-right:0.3rem;}
.cmr4 > *        {margin-right:0.4rem;}
.cmr5 > *        {margin-right:0.5rem;}
.cmb1 > *        {margin-bottom:0.1rem;}
.cmb2 > *        {margin-bottom:0.2rem;}
.cmb3 > *        {margin-bottom:0.3rem;}
.cmb4 > *        {margin-bottom:0.4rem;}
.cmb5 > *        {margin-bottom:0.5rem;}
.cms   > *       {margin:0.1rem;}
.cmm   > *       {margin:0.3rem;}
.cml   > *       {margin:0.5rem;}
.cmxl  > *       {margin:0.7rem;}
.cmxxl > *       {margin:1.0rem;}

/* 
child padding
*/
.cp1 > *         {padding:0.1rem;}
.cp2 > *         {padding:0.2rem;}
.cp3 > *         {padding:0.3rem;}
.cp4 > *         {padding:0.4rem;}
.cp5 > *         {padding:0.5rem;}
.cps   > *       {padding:0.1rem;}
.cpm   > *       {padding:0.3rem;}
.cpl   > *       {padding:0.5rem;}
.cpxl  > *       {padding:0.7rem;}
.cpxxl > *       {padding:1.0rem;}


/*************************************************
容器
*************************************************/
.row           {display: flex; flex-direction: row; flex-wrap: wrap; width: 100%; margin-left: auto; margin-right: auto;  }
.column        {display: flex; flex-direction: column; height:100%; }



/*************************************************
Flex 弹性容器布局：控制子元素位置
*************************************************/
/* 
子元素位置
flex 弹性布局方式：控制子元素的布局
容器属性
    flex-direction: 主轴方向
    justify-content: 主轴上的位置，如起点、中间、终点
    align-items：交叉轴上的位置
子元素属性
    flex-grow: 1：表示当容器有剩余空间时，该元素将扩大以占据剩余空间。这里的数值 “1” 表示该元素与其他设置了flex-grow的元素平分剩余空间。如果有多个元素设置了不同的flex-grow值，它们将按照比例分配剩余空间。
    flex-shrink: 1：表示当容器空间不足时，该元素将缩小。默认情况下，所有元素的flex-shrink值都是 1，即等比例缩小。
    flex-basis: auto：表示该元素的初始大小根据其内容自动确定。如果设置了具体的长度值，如flex-basis: 200px，则元素的初始大小将为该固定值。
    flex: 1 是一个简写属性，表示同时设置了flex-grow、flex-shrink和flex-basis三个属性。表示等比分摊，若只有一个元素，那就是填满。
*/
.childTopLeft       {display: flex; flex-direction: row;     justify-content: flex-start;  align-items: flex-start;}
.childTop           {display: flex; flex-direction: row;     justify-content: center;      align-items: flex-start;}
.childTopRight      {display: flex; flex-direction: row;     justify-content: flex-end;    align-items: flex-start;}
.childBottomLeft    {display: flex; flex-direction: row;     justify-content: flex-start;  align-items: flex-end;}
.childBottom        {display: flex; flex-direction: row;     justify-content: center;      align-items: flex-end;}
.childBottomRight   {display: flex; flex-direction: row;     justify-content: flex-end;    align-items: flex-end;}
.childLeft          {display: flex; flex-direction: row;     justify-content: flex-start;  align-items: center;}
.childCenter        {display: flex; flex-direction: column;  justify-content: center;      align-items: center;}
.childRight         {display: flex; flex-direction: row;     justify-content: flex-end;    align-items: center;}


/*************************************************
Grid 网格容器布局，控制子元素布局
*************************************************/
/* 自动网格（统统放在一行） */
.gridRow{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 10px;
    padding: 10px;
    }
/* 自动网格（统统放在一列） */
.gridColumn{
    display: grid;
    grid-template-rows: repeat(auto-fit, minmax(200px, 1fr));
    gap: 10px;
    padding: 10px;
    }
/* 2列网格 */
.grid2 {
    display: grid;
    grid-template-columns: auto auto;  /*几个auto就几列*/
    gap: 10px;  /*子项间距*/
    padding: 10px;
    }
/* 3列网格 */
.grid3 {
    display: grid;
    grid-template-columns: auto auto auto;  /*几个auto就几列*/
    gap: 10px;  /*子项间距*/
    padding: 10px;
    }
/* 4列网格 */
.grid4 {
    display: grid;
    grid-template-columns: auto auto auto auto;  /*几个auto就几列*/
    gap: 10px;  /*子项间距*/
    padding: 10px;
    }
    
      
/*网格项（占几个网格，看图）*/
.grid4-1000 { grid-column-start: 1; grid-column-end: 2; }
.grid4-1100 { grid-column-start: 1; grid-column-end: 3; }
.grid4-1110 { grid-column-start: 1; grid-column-end: 4; }
.grid4-1111 { grid-column-start: 1; grid-column-end: 5; }
.grid4-0100 { grid-column-start: 2; grid-column-end: 3; }
.grid4-0110 { grid-column-start: 2; grid-column-end: 4; }
.grid4-0111 { grid-column-start: 2; grid-column-end: 5; }
.grid4-0010 { grid-column-start: 3; grid-column-end: 4; }
.grid4-0011 { grid-column-start: 3; grid-column-end: 5; }
.grid4-0001 { grid-column-start: 4; grid-column-end: 5; }

    

